// RobotBuilder Version: 0.0.2
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.
#include "Shooter.h"
#include "../Robotmap.h"
#include "math.h"
Shooter::Shooter() : Subsystem("Shooter") {
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	wheelShooterEntry = RobotMap::shooterWheelShooterEntry;
	wheelShooterExit = RobotMap::shooterWheelShooterExit;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
}
    
void Shooter::InitDefaultCommand() {
	// Set the default command for a subsystem here.
	//SetDefaultCommand(new MySpecialCommand());
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
	runtoggle = false;
	entryset = 0;
	exitset = 0;
}
// Put methods for controlling this subsystem
// here. Call these from Commands.
void Shooter::ToggleRun() {
	if (runtoggle) 
		runtoggle = false;
	else {
		runtoggle = true;
		entryset = 0;
		exitset = 0;
	}
;
	
}
void Shooter::RunAtOutput(float entry, float exit) {
	SmartDashboard::PutBoolean("ShooterToggle",runtoggle);
	if (runtoggle) {
		if (fabs(entryset - entry) > .002) {
			entryset = entryset - .002;
			wheelShooterEntry->Set(entryset);
		}
			else
			wheelShooterEntry->Set(entry);
		
		if (fabs(exitset - exit) > .002) {
			exitset = exitset + .002;
			wheelShooterExit->Set(exitset);
		}
			else
			wheelShooterExit->Set(exit);
	}
		else {
			if(entryset < 0) {
				entryset = entryset + .002;
				wheelShooterEntry->Set(entryset);
			}
				else
				wheelShooterEntry->Set(0);
			if(exitset > 0) {
				exitset = exitset - .002;
				wheelShooterExit->Set(exitset);
			}
				else
				wheelShooterExit->Set(0);
		}
		
		
	
}
