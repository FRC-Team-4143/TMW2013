// RobotBuilder Version: 0.0.2
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.
#ifndef SHOOTER_H
#define SHOOTER_H
#include "Commands/Subsystem.h"
#include "WPILib.h"
/**
 *
 *
 * @author ExampleAuthor
 */
class Shooter: public Subsystem {
private:
	// It's desirable that everything possible under private except
	// for methods that implement subsystem capabilities
	bool runtoggle;
	float entryset;
	float exitset;
	float entryvolt;
	float exitvolt;
	int prevAngle;
	float shutoffTimer;
	float shootertimer;
	float EntrySOTimer;
	bool EntrySOFlag;
	float ExitSOTimer;
	bool ExitSOFlag;
	
	//Caclulate the angleOffset by pulling the shooter back until fully vertical.  
	//The expected value is XXX.  
	//Subtract the actual from XXX and set to angleOffset below.
	//Verify that the rollover value isn't within the travel of the climber
	static const int angleOffset = 0;
public:
	static const int FrontAngle = 305;
	static const int MiddleAngle = 330;
	static const int BackAngle = 330;
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	CANJaguar* wheelShooterEntry;
	CANJaguar* wheelShooterExit;
	AnalogChannel* shooterAnglePos;
	CANJaguar* shooterAngleSteer;
	PIDController* shooterAngle;
	Relay* trigger;
	DigitalInput* triggerStop;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	Shooter();
	void InitDefaultCommand();
	void RunAtOutput();
	void SetAngle(int angle);
	float GetEntrySpeed();
	float GetExitSpeed();
	int GetCorrectedAngle();
	void SetSpeeds(float entry, float exit, bool resetTimer);
	bool IsShooterReady();
	void SetFireTimer();
};
#endif
