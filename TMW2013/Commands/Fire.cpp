// RobotBuilder Version: 0.0.2
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.
#include "Fire.h"
Fire::Fire() {
	// Use requires() here to declare subsystem dependencies
	// eg. requires(chassis);
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::shooter);
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Prefs = Preferences::GetInstance();
}
// Called just before this Command runs the first time
void Fire::Initialize() {
	SetTimeout(0.2);
	delay = GetClock()+20;
	fireClock = GetClock()+1;
}
// Called repeatedly when this Command is scheduled to run
void Fire::Execute() {
		
	//if(fireClock > GetClock())
		Robot::shooter->trigger->Set(Relay::kForward);
	//else
		//Robot::shooter->trigger->Set(Relay::kReverse);
	
	if(!Robot::shooter->triggerStop->Get() && IsTimedOut())
		delay = GetClock() + .01;
}
// Make this return true when this Command no longer needs to run execute()
bool Fire::IsFinished() {
	if(delay < GetClock())
		return true;
	else
		return false;
}
// Called once after isFinished returns true
void Fire::End() {
	Robot::shooter->trigger->Set(Relay::kOff);
}
// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void Fire::Interrupted() {
	Robot::shooter->trigger->Set(Relay::kOff);
}
