// RobotBuilder Version: 0.0.2
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.
#include "Rotate.h"

Rotate::Rotate(float twistangle, bool stop, float timeout) {
	// Use requires() here to declare subsystem dependencies
	// eg. requires(chassis);
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::driveTrain);
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	TwistAngle = twistangle;
	SetTimeout(timeout);
	Stop = stop;
	
}
// Called just before this Command runs the first time
void Rotate::Initialize() {
        if( RobotMap::imu->GetYaw() - TwistAngle < 0)
	    	Robot::driveTrain->Crab(.3, 0, 0);
        else
	    	Robot::driveTrain->Crab(-.3, 0, 0);
}
// Called repeatedly when this Command is scheduled to run
void Rotate::Execute() {
}
// Make this return true when this Command no longer needs to run execute()
bool Rotate::IsFinished() {
	return IsTimedOut() || fabs( RobotMap::imu->GetYaw() - TwistAngle) < 10.0;
}
// Called once after isFinished returns true
void Rotate::End() {
	if(Stop)
		Robot::driveTrain->Crab(0,0,0);
}
// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void Rotate::Interrupted() {
	if(Stop)
		Robot::driveTrain->Crab(0,0,0);
}
