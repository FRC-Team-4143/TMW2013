// RobotBuilder Version: 0.0.2
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.
#include "LockRobot.h"
LockRobot::LockRobot(float timeout) {
	// Use requires() here to declare subsystem dependencies
	// eg. requires(chassis);
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::driveTrain);
    SetTimeout(timeout);
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    Lock = 1;
    Angle = 0;
}

LockRobot::LockRobot(float timeout, float angle) {
	Requires(Robot::driveTrain);
    SetTimeout(timeout);
    Angle = angle;
    Lock = 0;
}
// Called just before this Command runs the first time
void LockRobot::Initialize() {
    if(Lock)
	    Robot::driveTrain->SideLock();
    else
        Robot::driveTrain->Steer(0,0,Angle);
}
// Called repeatedly when this Command is scheduled to run
void LockRobot::Execute() {
}
// Make this return true when this Command no longer needs to run execute()
bool LockRobot::IsFinished() {
	return IsTimedOut();
}
// Called once after isFinished returns true
void LockRobot::End() {
}
// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void LockRobot::Interrupted() {
}
