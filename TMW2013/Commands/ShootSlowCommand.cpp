// RobotBuilder Version: 0.0.2
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.

#define MINSHOOT 20
#define SHOOTZONE .5

#include "ShootSlowCommand.h"
ShootSlowCommand::ShootSlowCommand() {
	// Use requires() here to declare subsystem dependencies
	// eg. requires(chassis);
}
// Called just before this Command runs the first time
void ShootSlowCommand::Initialize() {
  loops = 0;
  printf("ShootSlowCommand called \r\n");
}
// Called repeatedly when this Command is scheduled to run
void ShootSlowCommand::Execute() {
	if(loops <= MINSHOOT)
		RobotMap::shooter->Set(.5);
	loops++;

}
// Make this return true when this Command no longer needs to run execute()
bool ShootSlowCommand::IsFinished() {
	if(loops <= MINSHOOT)
		return false;

	if(RobotMap::shooterpot->GetVoltage() > RobotMap::CamStop && 
		RobotMap::shooterpot->GetVoltage() < (RobotMap::CamStop+SHOOTZONE))
		return true;
	else
		return false;
}
// Called once after isFinished returns true
void ShootSlowCommand::End() {
	RobotMap::shooter->Set(0);
}
// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void ShootSlowCommand::Interrupted() {
	RobotMap::shooter->Set(0);
}
